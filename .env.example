# ClemenTime Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED: Dashboard Authentication (Google OAuth)
# =============================================================================
# Use the same credentials as Google Meet/Calendar API
# Get from Google Cloud Console -> APIs & Services -> Credentials
GOOGLE_CLIENT_ID=your-client-id-here
GOOGLE_CLIENT_SECRET=your-client-secret-here

# OAuth callback URL (update for production)
GOOGLE_AUTH_CALLBACK_URL=http://localhost:3000/auth/google/callback

# Session secret for cookie encryption (generate a random 32+ character string)
SESSION_SECRET=your-random-session-secret-here

# =============================================================================
# REQUIRED: Google Meet/Calendar API Configuration
# =============================================================================
# Get refresh token by running: npm run auth
GOOGLE_MEET_REFRESH_TOKEN=your-refresh-token-here

# Optional: If using different OAuth app for Meet API (usually same as above)
# GOOGLE_MEET_CLIENT_ID=your-client-id-here
# GOOGLE_MEET_CLIENT_SECRET=your-client-secret-here

# =============================================================================
# REQUIRED: Slack Bot Configuration
# =============================================================================
# Bot token starts with "xoxb-"
# Get from Slack App settings -> OAuth & Permissions
SLACK_BOT_TOKEN=xoxb-your-bot-token-here

# App token starts with "xapp-" (required for Socket Mode)
# Get from Slack App settings -> Basic Information -> App-Level Tokens
SLACK_APP_TOKEN=xapp-your-app-token-here

# Signing secret for webhook verification
# Get from Slack App settings -> Basic Information -> Signing Secret
SLACK_SIGNING_SECRET=your-signing-secret-here

# =============================================================================
# OPTIONAL: Facilitator Slack IDs and Emails
# =============================================================================
# JSON mapping of section IDs to Slack IDs and Google emails
# Keeps sensitive IDs out of config files
FACILITATOR_MAPPING={"section_01":{"slack_id":"U12345678","google_email":"facilitator1@university.edu"},"section_02":{"slack_id":"U87654321","google_email":"facilitator2@university.edu"}}

# =============================================================================
# OPTIONAL: Application Configuration
# =============================================================================
# Port for the web interface (default: 3000)
PORT=3000

# Environment mode (development, production)
NODE_ENV=production

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Database location (default: data/clementime.db)
# DATABASE_PATH=data/clementime.db
# SCHEDULER_DATABASE_PATH=data/clementime.db

# =============================================================================
# OPTIONAL: Google Cloud Storage (for Cloud Run deployments)
# =============================================================================
# Enable Cloud Storage for persistent data in Cloud Run
# USE_CLOUD_STORAGE=true

# Google Cloud Storage bucket name
# STORAGE_BUCKET=clementime-data-your-project-id

# Data mount path (for Cloud Storage)
# DATA_MOUNT_PATH=gs://your-bucket-name/data

# =============================================================================
# OPTIONAL: Test Mode
# =============================================================================
# Override config file test mode settings
# TEST_MODE_ENABLED=true
# TEST_MODE_SLACK_ID=U12345678

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit this file with real values to version control
# 2. Use strong, unique tokens and secrets
# 3. Regularly rotate API keys and tokens
# 4. Limit service account permissions to minimum required scopes
# 5. Store credentials securely in production (e.g., Docker secrets, K8s secrets)

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# LOCAL/DOCKER DEPLOYMENT:
# When deploying with Docker, these environment variables are automatically
# loaded from this .env file by docker-compose.yml
#
# For production Docker deployments:
# 1. Copy this file to .env
# 2. Fill in all required values
# 3. Run: ./clementime start
#
# For custom configuration:
# ./clementime start my-custom-config.yml
#
# GOOGLE CLOUD RUN DEPLOYMENT:
# The ./gcloud-deploy.sh script automatically:
# 1. Creates a Cloud Storage bucket for persistent data
# 2. Sets up service account with proper permissions
# 3. Uploads local data and config to Cloud Storage
# 4. Configures USE_CLOUD_STORAGE and STORAGE_BUCKET environment variables
# 5. Deploys with min instances = 1 for data persistence
#
# Cloud Storage provides:
# - Persistent file storage across container restarts
# - Automatic database backups every 5 minutes
# - Shared storage for multiple container instances
# - Easy data management via gsutil commands